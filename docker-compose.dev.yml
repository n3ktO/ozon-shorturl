version: "3.9"

services:

  # Production
  # docker-compose build
  # docker-compose run -p 127.0.0.1:8080:8080 -d server

  database:
    image: postgres:13-alpine
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=qwerty
      - POSTGRES_DB=shorturl
    ports:
      - "5432:5432"

  server:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - database
    environment:
      - HOST=:8080
      - DB_URL=postgresql://postgres:qwerty@database:5432/shorturl
    ports:
      - "8080:8080"

  # Development
  # docker-compose build
  # docker-compose run -p 127.0.0.1:8080:8080 -d server-development

  database-development:
    image: postgres:13-alpine
    volumes:
      - ./postgres-data-dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=qwerty
      - POSTGRES_DB=shorturl
    ports:
      - "5432:5432"

  server-development:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./:/go/src/shorturl
    depends_on:
      - database-development
    environment:
      - HOST=:8080
      - DB_URL=postgresql://postgres:qwerty@database-development:5432/shorturl
    ports:
      - "8080:8080"

  # Test
  # docker-compose build
  # docker-compose run -p 127.0.0.1:8080:8080 -d server-test

  database-test:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=qwerty
      - POSTGRES_DB=shorturl
    ports:
      - "5432:5432"

  server-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      - database-test
    environment:
      - HOST=:8080
      - DB_URL=postgresql://postgres:qwerty@database-test:5432/shorturl
    ports:
      - "8080:8080"